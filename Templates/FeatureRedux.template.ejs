import { createReducer, createActions } from 'reduxsauce'
import Immutable from 'seamless-immutable'
import { combineReducers } from 'redux'

const {Types, Creators} = createActions({
<%- (() => {
  return actions.map(action =>
  `  ${action}: ['id'],\n  ${action}Success: ['data'],\n  ${action}Error: ['error'],\n`).join('\n')
})()%>
})

export const <%=name%>Types = Types
export default Creators

export const INITIAL_STATE = Immutable({
  fetching: true,
  error: null 
})

export const reducer = createReducer(INITIAL_STATE, {
  <%- (() => {
  return actions.map(action =>
`
  [Types.${parseRedux(action)}]: (state, { id }) => state.merge({fetching: true}),
  [Types.${parseRedux(action)}_SUCCESS]: (state, { data }) => state.merge({...data, fetching: false}),
  [Types.${parseRedux(action)}_ERROR]: (state, { error }) => state.merge({error, fetching: false}),`
  ).join('\n')
})()%>
})